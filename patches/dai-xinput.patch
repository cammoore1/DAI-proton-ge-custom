diff --git a/dlls/user32/input.c b/dlls/user32/input.c
index 8cb4c1f6f07..8d493166f90 100644
--- a/dlls/user32/input.c
+++ b/dlls/user32/input.c
@@ -780,8 +780,19 @@ HWND WINAPI GetActiveWindow(void)
 HWND WINAPI GetFocus(void)
 {
     GUITHREADINFO info;
+    HWND retValueWindow;
+    static HWND prev = 0;
+
     info.cbSize = sizeof(info);
-    return NtUserGetGUIThreadInfo( GetCurrentThreadId(), &info ) ? info.hwndFocus : 0;
+
+    retValueWindow = NtUserGetGUIThreadInfo( GetCurrentThreadId(), &info ) ? info.hwndFocus : 0;
+
+    if (retValueWindow == 0 && prev != 0)
+        NtUserAttachThreadInput(0, 0, 1);
+    else
+        prev = retValueWindow;
+
+    return retValueWindow;
 }
 
 
diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index 3cb7fc3341c..a49333da0eb 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -30,6 +30,8 @@
 #pragma makedep unix
 #endif
 
+#include <sys/prctl.h>
+#include <string.h>
 #include "ntstatus.h"
 #define WIN32_NO_STATUS
 #include "win32u_private.h"
@@ -587,6 +589,34 @@ HWND get_focus(void)
 BOOL WINAPI NtUserAttachThreadInput( DWORD from, DWORD to, BOOL attach )
 {
     BOOL ret;
+    static int visited = 0;
+    static DWORD fromThreadForHack = 0;
+    static DWORD toThreadForHack = 0;
+    static char processNameForHack[16];
+    static const char* DAIprocessName = "DragonAgeInquis";
+    static const char* DAIGameLoopName = "GameLoop";
+
+    prctl(PR_GET_NAME, processNameForHack);
+
+    TRACE("Process Name: %s\n", processNameForHack); 
+    
+    if (strncmp(DAIprocessName, processNameForHack, 15) == 0 || strncmp(DAIGameLoopName, processNameForHack, 8) == 0)
+    {
+    	if (!visited)
+    	{
+	    TRACE("First Visit Process Name: %s\n", processNameForHack);
+            fromThreadForHack = from;
+	    toThreadForHack = to;
+	    visited = 1;
+        }
+
+        if (from == 0 && to == 0 && visited)
+        {
+	    TRACE("00 Process Name: %s\n", processNameForHack);
+            from = fromThreadForHack;
+	    to = toThreadForHack;
+        }
+    }
 
     SERVER_START_REQ( attach_thread_input )
     {
